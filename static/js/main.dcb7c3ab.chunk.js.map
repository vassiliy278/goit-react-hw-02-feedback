{"version":3,"sources":["style/App.module.css","components/Section.js","components/Statistics.js","components/FeedbackOptions.js","components/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","statistics","Good","Neutral","Bad","total","positivePercentage","feedback","onLeaveFeedback","options","Object","keys","forEach","e","name","onClick","map","type","key","notify","message","App","state","handleChange","target","setState","prevState","totalFeedbackCounter","positivePercentageCounter","Math","floor","this","Notification","Component","ReactDOM","render","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,QAAU,qBAAqB,MAAQ,mBAAmB,OAAS,oBAAoB,cAAgB,2BAA2B,MAAQ,qB,8GCE7I,SAASC,EAAT,GAAsC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACrC,OACI,iCACA,4BAAKD,GACL,6BAAMC,ICJC,SAASC,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAE5D,OACI,oCACI,2BAAIJ,GACJ,2BAAIC,GACJ,2BAAIC,GACJ,qCAAWC,GACX,wCAAcC,EAAd,M,MCNG,SAASC,EAAT,GAAgD,IAA5BC,EAA2B,EAA3BA,gBAAiBC,EAAU,EAAVA,QAIhD,OAHcC,OAAOC,KAAKF,GACpBG,SAAQ,SAAAC,GAAC,OAAI,4BAAQC,KAAMD,EAAGE,QAASP,GAAkBK,MAG3D,oCACKH,OAAOC,KAAKF,GACZO,KAAI,SAAAH,GAAC,OAAK,4BAAQI,KAAK,SAASH,KAAMD,EAAGK,IAAKL,EAAGE,QAASP,GAAkBK,OCTzF,IAWgBM,EAXD,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAEb,OACI,oCACI,4BAAKA,KCDIC,E,4MACnBC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPmB,aAAe,YAAe,IACpBT,EADmB,EAAZU,OACPV,KACR,EAAKW,UAAS,SAACC,GAAD,sBACXZ,EAAOY,EAAUZ,GAAQ,O,EAG9Ba,qBAAuB,WAAO,IAAD,EACI,EAAKL,MACpC,OAF2B,EACnBpB,KADmB,EACbC,QADa,EACJC,K,EAGzBwB,0BAA4B,WAAO,IAC1B1B,EAAQ,EAAKoB,MAAbpB,KACP,GAAI,EAAKyB,uBACP,OAAOE,KAAKC,MAAO5B,EAAK,EAAKyB,uBAAwB,M,uDAG/C,IAAD,EACwBI,KAAKT,MAA5BpB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,oCACE,kBAACN,EAAD,CAASC,MAAM,yBACb,kBAAC,EAAD,CAAiBS,gBAAiBuB,KAAKR,aAAcd,QAASsB,KAAKT,SAEpES,KAAKJ,uBAAyB,kBAAC7B,EAAD,CAASC,MAAM,YAC5C,kBAAC,EAAD,CACAG,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO0B,KAAKJ,uBACZrB,mBAAoByB,KAAKH,+BACd,kBAACI,EAAD,CAAcZ,QAAQ,2B,GApCVa,aCDjCC,IAASC,OACP,oCACA,kBAAC,EAAD,OAEAC,SAASC,eAAe,U","file":"static/js/main.dcb7c3ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__1zXq9\",\"title\":\"App_title__2RHLh\",\"button\":\"App_button__3hHH0\",\"buttons_block\":\"App_buttons_block__2QS8T\",\"stats\":\"App_stats__226CK\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Section ({title, children}) {\n    return (\n        <section>\n        <h1>{title}</h1>\n        <div>{children}</div>\n        </section>\n    )\n}\n\nSection.propTypes = {\n    title: PropTypes.string,\n    children: PropTypes.element\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function statistics ({Good, Neutral, Bad, total, positivePercentage }) {\n\n    return (\n        <>\n            <p>{Good}</p>\n            <p>{Neutral}</p>\n            <p>{Bad}</p>\n            <p>Total: {total}</p>\n            <p>Positive: {positivePercentage}%</p>\n        </>\n    )\n}\n\nstatistics.propTypes = {\n    Good: PropTypes.number,\n    Bad: PropTypes.number,\n    Neutral: PropTypes.number,\n    total: PropTypes.number,\n    positivePercentage: PropTypes.number\n}","import React from 'react';\nimport style from '../style/App.module.css';\nimport PropTypes from 'prop-types';\n\n\nexport default function feedback ({onLeaveFeedback, options}) {\n    const names = Object.keys(options);\n    names.forEach(e => <button name={e} onClick={onLeaveFeedback}>{e}</button>\n    )\n    return (\n        <>\n            {Object.keys(options)\n            .map(e => (<button type=\"button\" name={e} key={e} onClick={onLeaveFeedback}>{e}</button>)\n            )}\n        </>\n\n    )\n}\n\nfeedback.propTypes = {\n    options: PropTypes.shape({\n        Good: PropTypes.number,\n        Bad: PropTypes.number,\n        Neutral: PropTypes.number\n    }),\n    onLeaveFeedback: PropTypes.func\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst notify = ({message}) => {\n\n    return(\n        <>\n            <h2>{message}</h2>\n        </>\n    )\n}\nnotify.propTypes = {\n    message: PropTypes.string\n}\nexport default  notify","import React, {Component} from 'react'\nimport Section from './components/Section'\nimport Statistics from './components/Statistics'\nimport FeedbackOption from './components/FeedbackOptions'\nimport Notification from './components/Notification'\n\nexport default class App extends Component {\n  state = {\n    Good: 0,\n    Neutral: 0,\n    Bad: 0\n  }\n  handleChange = ({target}) => {\n    const { name } = target\n    this.setState((prevState) => ({\n      [name]: prevState[name] + 1\n    }))\n  }\n  totalFeedbackCounter = () => {\n    const { Good, Neutral, Bad } = this.state;\n    return Good + Neutral + Bad\n  }\n  positivePercentageCounter = () => {\n    const {Good} = this.state\n    if (this.totalFeedbackCounter()){\n      return Math.floor((Good/this.totalFeedbackCounter())*100)\n    }\n  }\n  render() {\n    const { Good, Neutral, Bad } = this.state;\n    return (\n      <>\n        <Section title=\"Please Leave Feedback\">\n          <FeedbackOption  onLeaveFeedback={this.handleChange} options={this.state}/>\n        </Section>\n        {this.totalFeedbackCounter() ? <Section title=\"Feedback\">\n          <Statistics \n          Good={Good} \n          Neutral={Neutral} \n          Bad={Bad} \n          total={this.totalFeedbackCounter()} \n          positivePercentage={this.positivePercentageCounter()}/>\n        </Section> : <Notification message=\"No feedback given\"/>}\n      </>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <>\n  <App/>\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}